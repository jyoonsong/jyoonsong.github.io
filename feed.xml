<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko_KR"><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://blog.jaeyoon.io/feed.xml" rel="self" type="application/atom+xml"/><link href="http://blog.jaeyoon.io/" rel="alternate" type="text/html" hreflang="ko_KR"/><updated>2020-09-06T15:36:45+00:00</updated><id>http://blog.jaeyoon.io/</id><title type="html">재윤 블로그</title><subtitle>HCI 학도가 생각과 경험을 기록하고 정리하는 공간입니다.</subtitle><author><name>Jaeyoon Song</name></author><entry><title type="html">올해 여름 일상</title><link href="http://blog.jaeyoon.io/2020/09/summer.html" rel="alternate" type="text/html" title="올해 여름 일상"/><published>2020-09-01T19:11:20+00:00</published><updated>2020-09-01T19:11:20+00:00</updated><id>http://blog.jaeyoon.io/2020/09/summer</id><content type="html" xml:base="http://blog.jaeyoon.io/2020/09/summer.html">&lt;p&gt;올해 여름에 한 것들.&lt;/p&gt; &lt;h3 id=&quot;연구-프로젝트&quot;&gt;연구 프로젝트&lt;/h3&gt; &lt;p&gt;미국에 계신 지도교수님과 함께 새로운 연구 프로젝트를 진행하고 있다. 사실 5월 정도에 시작해서 이번 여름 내 시간의 대부분을 쏟았다. 사전 설문조사 진행 및 분석, 선행연구 조사, 시스템 개발, 두 번의 deployment study, 사후 인터뷰를 마쳤다. 그리고 수집한 데이터 분석을 하고 있는 중이다. deployment study를 두 번이나 했으니 수집된 데이터가 꽤 많다. 즉 할 일도 많다..&lt;/p&gt; &lt;h3 id=&quot;social-network-analysis-강의-수강&quot;&gt;Social network analysis 강의 수강&lt;/h3&gt; &lt;p&gt;Coursera에서 무료로 제공되는 &lt;a href=&quot;https://www.coursera.org/learn/python-social-network-analysis&quot;&gt;소셜 네트워크 분석 강의&lt;/a&gt;를 수강했다. 주로 그래프 이론과 NetworkX 라이브러리를 사용하는 방법에 대해 배웠다. 파이썬과 그래프에 대한 기본적 지식이 있는 상태에서 무리 없이 마칠 수 있는 과정이었다. 일단 네트워크를 적절하게 시각화한 후에 구체적으로 어떤 분석이 이루어질지 가늠하기 때문에 시각화의 중요성을 다시 한 번 느낄 수 있었다. 배운 지식은 연구 프로젝트를 진행하며 유용하게 써먹었다.&lt;/p&gt; &lt;h3 id=&quot;연구-아이디어-피칭&quot;&gt;연구 아이디어 피칭&lt;/h3&gt; &lt;p&gt;함께 일하고 있는 교수님들께 내가 가지고 있는 연구 아이디어를 피칭할 기회가 있었다. 내 아이디어로 연구를 하는 건 내가 바라고 바라오던 기회라 정말 온 힘을 다해 준비했다. 영어회화 스터디에서 미리 발표해볼 기회를 얻어 연습도 할 수 있었다. 감사하게도 교수님 두분 모두 발표를 극찬해주셨고, 아이디어도 추후 발전시켜볼 가치가 있다고 말씀해주셨다. 심지어 한분은 내 발표자료를 연구실 학생들에게 공유하고 싶다고 말씀해주셔서 감동먹었다… 나도 다른 사람의 아이디어에 귀기울여주는 사람이 되어야지.&lt;/p&gt; &lt;figure&gt;&lt;img data-action=&quot;zoom&quot; src=&quot;/assets/img/200901/email.jpg&quot; /&gt;&lt;figcaption&gt; 교수님의 칭찬은 대학원생도 춤추게 한다 &lt;/figcaption&gt;&lt;/figure&gt; &lt;h3 id=&quot;논문-읽기&quot;&gt;논문 읽기&lt;/h3&gt; &lt;p&gt;사실 연구 프로젝트의 일환이나 마찬가지이지만 새로 읽은 논문이 꽤 된다. 특히 학부생 때는 CHI와 CSCW에 실린 페이퍼들을 많이 읽었다면, 이번 프로젝트를 진행하면서는 MIS Quarterly나 Administrative Science Quarterly와 같은 경영학 저널에 실린 페이퍼를 많이 참고했다.&lt;/p&gt; &lt;p&gt;교수님의 추천으로 레퍼런스 관리 툴인 &lt;a href=&quot;https://www.mendeley.com/?interaction_required=true&quot;&gt;Mendeley&lt;/a&gt;를 사용하기 시작했다.&lt;/p&gt; &lt;h3 id=&quot;웹개발-외주&quot;&gt;웹개발 외주&lt;/h3&gt; &lt;p&gt;미국에 가기 전까지 소일거리를 구할 목적으로 &lt;a href=&quot;https://kmong.com&quot;&gt;크몽&lt;/a&gt;에 웹개발 서비스를 등록했다. 마감에 맞춰 개발하느라 밤을 두 번 정도 샜는데, 의뢰인님으로부터 좋은 평가를 받아 아주 뿌듯하다. 개발 과정에서도 문제 없이 소통하고 일이 술술 진행되어 좋은 경험이었다.&lt;/p&gt; &lt;figure&gt;&lt;img data-action=&quot;zoom&quot; src=&quot;/assets/img/200901/stars.png&quot; /&gt;&lt;figcaption&gt; 별 다섯 개 투척해주신 의뢰인님 &lt;/figcaption&gt;&lt;/figure&gt;</content><author><name>jaeyoon</name></author><category term="일기장"/><summary type="html">올해 여름에 한 것들. ### 연구 프로젝트 미국에 계신 지도교수님과 함께 새로운 연구 프로젝트를 진행하고 있다. 사실 5월 정도에 시작해서 이번 여름 내 시간의 대부분을 쏟았다. 사전 설문조사 진행 및 분석, 선행연구 조사, 시스템 개발, 두 번의 deploymen</summary></entry><entry><title type="html">미국 유학 준비과정</title><link href="http://blog.jaeyoon.io/2020/08/study-abroad.html" rel="alternate" type="text/html" title="미국 유학 준비과정"/><published>2020-08-30T19:11:20+00:00</published><updated>2020-08-30T19:11:20+00:00</updated><id>http://blog.jaeyoon.io/2020/08/study-abroad</id><content type="html" xml:base="http://blog.jaeyoon.io/2020/08/study-abroad.html">&lt;p&gt;요새 비자나 미국에서 자리잡을 준비를 하며 선배들이 남긴 글에 대해 무한한 감사를 느끼고 있다. 그래서 시간이 좀 지나긴 했지만 나도 내 유학준비과정을 글로 남겨보고자 한다. 유학준비를 하며 인터넷 상의 많은 글과 많은 선배들의 조언을 참고했지만, 그중에서도 &lt;a href=&quot;http://mcpanic.com/&quot;&gt;김주호 교수님 블로그&lt;/a&gt;의 유학 가이드를 가장 많이 참고했었다. 따라서 상당 부분 겹칠 수 있고, 분야에 따라 김주호 교수님의 글을 참고하는 편이 나을 수도 있다는 점을 미리 밝히고 시작한다.&lt;/p&gt; &lt;h3 id=&quot;어드미션-결과&quot;&gt;어드미션 결과&lt;/h3&gt; &lt;p&gt;내가 합격한 학교는 다음과 같다. 합격한 학교에서는 모두 풀펀딩을 제의받았다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;MIT Sloan School of Management - IT Program&lt;/li&gt; &lt;li&gt;Stanford - Management Science &amp;amp; Engineering&lt;/li&gt; &lt;li&gt;University of Washington - Computer Science &amp;amp; Engineering&lt;/li&gt; &lt;li&gt;University of Washington - Human Centered Design &amp;amp; Engineering&lt;/li&gt; &lt;li&gt;Georgia Tech - Human Centered Computing&lt;/li&gt; &lt;li&gt;Northwestern University - Computer Science&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;한편 UCB, Cornell, UMich의 Information School에서는 불합격 통보를 받았다.&lt;/p&gt; &lt;p&gt;내가 지원한 8곳의 연구 성격을 스펙트럼 상에 나타내면 다음과 같다. 물론 내가 지원한 교수님들 기준으로 내 주관이 반영되어 있다는 점을 고려해서 참고해주시길 바란다. 또한 여기서 “사회과학적”, “공학적”이라는 표현은 어디까지나 상대적이다. Sloan이나 MS&amp;amp;E의 교수님들은 사회과학자로서는 상당히 융합적인 연구를 하시는 분들이었다. 반대로 내가 지원하려던 UW CSE의 연구실은 공대에서 가장 soft한 연구를 하는 곳이었다.&lt;/p&gt; &lt;figure&gt;&lt;img data-action=&quot;zoom&quot; src=&quot;/assets/img/200830/spectrum.jpg&quot; alt=&quot;스펙트럼&quot; /&gt;&lt;figcaption&gt;내가 느낀 연구 성향/성격 스펙트럼&lt;/figcaption&gt;&lt;/figure&gt; &lt;p&gt;위와 같이 Sloan과 MS&amp;amp;E가 상대적으로 사회과학적인 연구를 하는 곳이라면, CS나 HCC와 같은 전공은 테크니컬한 연구를 하는 편이다. 그 사이에 있는 모든 information school이 리젝한 것을 보면, 무슨 이유에선지 양 극단에 있는 학과에서 나를 좀더 선호한 모양이다. 아마 CS에서는 내 사회과학적 백그라운드가, 경영대에서는 내 공학적 백그라운드가 매력을 발휘한 반면, Information school은 워낙 나처럼 융합적인 백그라운드를 가진 지원자가 많으니 매력이 덜했던 것 아닐까 싶다. 물론 내 짐작일 뿐이다.&lt;/p&gt; &lt;p&gt;이처럼 HCI와 같은 융합 연구를 하는 연구자 입장에서는 지원할 때 각 교수님의 연구 성격이 굉장히 중요한 고려 요소 중 하나이다. 같은 주제도 어떤 연구 성향/성격을 가졌느냐에 따라 다르게 접근할 수 있기 때문이다. 주로 이런 연구 성향/성격은 해당 교수님께서 어떤 학과에서 학위를 땄는지와 최근에 낸 논문을 보면 알 수 있다.&lt;/p&gt; &lt;p&gt;최종적으로 나는 MIT Sloan을 선택했는데 가장 큰 이유 세 가지를 꼽자면 (1) 교수님께서 제안해주신 연구 프로젝트 아이디어들이 나와 굉장히 잘 맞다고 생각했고, (2) 펀딩 조건이 압도적으로 좋았으며, (3) 다른 학교에 비해 박사과정 중도 탈락이 적은 편이라고 들었기 때문이다.&lt;/p&gt; &lt;h3 id=&quot;타임라인&quot;&gt;타임라인&lt;/h3&gt; &lt;figure&gt;&lt;img data-action=&quot;zoom&quot; src=&quot;/assets/img/200830/timeline.jpg&quot; alt=&quot;타임라인&quot; /&gt;&lt;figcaption&gt;나의 유학 준비 타임라인&lt;/figcaption&gt;&lt;/figure&gt; &lt;p&gt;나는 &lt;strong&gt;연구경험&lt;/strong&gt;에 가장 큰 비중을 두고 준비한 것 같다. 2학년 때 경영과학 시간에 제출한 과제를 시작으로 꾸준히 연구 경험을 쌓았다. 매 방학마다 연구경험 쌓기에 몰두했다. 3학년 여름에는 학생자율연구와 서울대 연구실 인턴을 했고, 3학년 겨울과 4학년 여름에는 카이스트에서 연구실 인턴을 했다. 학기중에도 학점관리를 제하면 연구에 매진한 것 같다.&lt;/p&gt; &lt;p&gt;이 때문에 &lt;strong&gt;영어 공인점수&lt;/strong&gt;는 생각보다 급하게 준비했다. 본래 3학년 겨울에 준비할 생각이었는데, 연구실 인턴을 우선순위로 삼다보니 시간 내서 공부하는 게 여간 어려운 일이 아니었다. 결국 4학년 여름이 되어서야 주말마다 서울로 올라와 GRE 학원을 다니기 시작했고, 10월초에 뒤늦게 GRE 점수 준비를 완료했다. 그런데 토플을 얕본 탓인지 뒤이어 응시한 토플 점수가 생각보다 낮게 나왔다. 아쉬웠지만 여유롭게 준비하지 못한 내 탓이니 그냥 급하게 제출해버렸다. UMich와 UCB에서는 인터뷰 오퍼조차 받지 못했는데, 아마 토플 점수로 인해 서류에서 탈락한 것일지도.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;SOP 등의 서류 준비&lt;/strong&gt; 일정은 추천서를 기준으로 계획했다. 추천서를 부탁드릴 교수님들께 10월에 면담을 하기로 연락드렸고, 면담 때 SOP를 보여드리기 위해 그 전에는 무조건 first draft를 완성하자 식이었다.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;학교와 교수님 서치&lt;/strong&gt;의 경우 연구경험을 쌓으면서 자연스럽게 이루어졌던 것 같다. 여러 선행연구를 읽으며 웬만한 연구자들 이름은 눈에 익게 되었고, 나의 관심사와 직결된 연구자들은 스프레드시트에 간간이 기록해두었다. 4학년 여름에 스프레드시트를 좀더 체계적으로 정리하며 지원할 교수님 리스트를 학교별로 구체화했다.&lt;/p&gt; &lt;p&gt;그외 미리 해야 할 것은 추천서를 받을 교수님을 확보하는 것인데, 이는 서류 준비에 대한 별도의 포스팅에서 이야기하면 좋을 것 같다.&lt;/p&gt; &lt;p&gt;아무튼 내 타임라인은 너무 급박해서 좋은 본보기는 되지 못하는 것 같다. 나는 3학년 때 학부 마치고 박사유학에 지원하기로 결정을 했는데, 이러한 결정을 좀더 일찍 했다면 저학년 때 영어 점수를 여유 있게 따놓았을 것 같다. 그래도 한 가지 잘한 게 있다면 연구 경험에 가장 큰 비중을 둔 점 정도.&lt;/p&gt; &lt;h3 id=&quot;더-자세한-이야기&quot;&gt;더 자세한 이야기&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;em&gt;[0] 어드미션 결과와 타임라인 (현재 글)&lt;/em&gt;&lt;/li&gt; &lt;li&gt;[1] 왜 박사유학을 가고 싶은가&lt;/li&gt; &lt;li&gt;[2] &lt;a href=&quot;/2020/09/grad-abroad.html&quot;&gt;대학원 유학의 종류&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[3] 연구실 인턴 경험&lt;/li&gt; &lt;li&gt;[4] GRE 준비&lt;/li&gt; &lt;li&gt;[5] 포트폴리오 사이트 및 CV 준비&lt;/li&gt; &lt;li&gt;[6] 서류 준비: SOP/Personal statement/추천서&lt;/li&gt; &lt;li&gt;[7-1] &lt;a href=&quot;/2020/01/interview-1.html&quot;&gt;인터뷰 준비과정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[7-2] &lt;a href=&quot;/2020/01/interview-2.html&quot;&gt; 인터뷰 스크립트&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>jaeyoon</name></author><category term="미국"/><category term="유학"/><category term="박사"/><summary type="html">요새 비자나 미국에서 자리잡을 준비를 하며 선배들이 남긴 글에 대해 무한한 감사를 느끼고 있다. 그래서 시간이 좀 지나긴 했지만 나도 내 유학준비과정을 글로 남겨보고자 한다. 유학준비를 하며 인터넷 상의 많은 글과 많은 선배들의 조언을 참고했지만, 그중에서도 [김주호 교</summary></entry><entry><title type="html">결과가 말해주지 않는 것</title><link href="http://blog.jaeyoon.io/2020/06/webtoon.html" rel="alternate" type="text/html" title="결과가 말해주지 않는 것"/><published>2020-06-30T19:11:20+00:00</published><updated>2020-06-30T19:11:20+00:00</updated><id>http://blog.jaeyoon.io/2020/06/webtoon</id><content type="html" xml:base="http://blog.jaeyoon.io/2020/06/webtoon.html">&lt;blockquote&gt; &lt;p&gt;작년과 올해를 살면서 가장 중요하게 생각했던 내용을 가사로 썼다. 마치 남에게 훈계하는 듯한 말투지만 사실은 나 자신에게 하는 이야기다. 멋모르고 밴드를 시작한 후 십 년이 지났다. 별의별 경험을 다 했다. 다양한 사람들도 만났다. 그러면서 한 가지 배운 것은, 사람은 다 거기서 거기라는 거다. 날고 기는 것처럼 보이는 사람도 불안하기는 마찬가지고, 그건 경험이 쌓인다고 나아지는 것도 아니다. 그러니 남들을 너무 신경 쓰지 말고 각자 씩씩한 척하며 제 갈 길 가면 되는 거다. - 장기하 &amp;lt; 그건 니 생각이고 &amp;gt; 일곡일담 중&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;strong&gt;결과가 말해주지 않는 것들이 참 많은 것 같다.&lt;/strong&gt; 좋은 결과에 미화되는 과정과 나쁜 결과에 가려지는 노력들. 상당한 운과 인간이 만든 제도의 필연적인 결함. 살면 살수록 인생의 랜덤함을 온몸으로 체감중이다. 성과가 화려한 사람들은 종종 자신이 그간 한 노력에 정비례한 결과를 얻었다고 굳게 믿는 경우가 많다. 자연스레 그만큼의 성과를 못낸 사람은 분명 노력이 부족했을 거라고 여기곤 한다. 고등학교를 갓 졸업했을 당시의 나도 그랬다. 고등학교 3년 내내 미친듯이 공부했으니 내가 얻은 결과는 오로지 내가 얻은 것이고 노력은 배신하지 않는다는 믿음을 굳게 가지고 있었다.&lt;/p&gt; &lt;p&gt;하지만 시간이 지나니 그 굳은 믿음은 조금씩 깨져 갔다. 가끔은 노력이 좀 배신할 때도 있다. 아니, 생각보다 많다. 성과는 결코 노력에 정비례하여 주어지지 않는다. 예컨대 모 고등학교에서 3년 내내 전교 1등을 독차지하던 친구가 있었다. 전교 1등을 제하더라도 이 친구를 잘 아는 사람들은 누구나 정말 똑똑한데 무서울 정도로 열심히 하기까지 하는 친구라고 칭찬하곤 했다. 그런데 이토록 인정받던 이 친구가 돌연 대학 입시에서는 서울대학교에서 불합격 통보를 받았다. 이 놀라운 소식에 사람들은 도대체 이 친구가 무엇이 부족했을지에 대해 저마다의 가설을 세우기 시작했다. 당시에는 나도 무슨 이유가 있겠거니 싶었다. 그래야 나의 합격이 더 유의미할 테니 말이다. 하지만 지금 돌이켜보면 그 친구가 그저 운이 없었고 그 친구를 알아보기에 대입이라는 제도가 완전하지 않을 뿐, 그 친구가 떨어져야만 하는 논리적 이유는 없었다고 생각한다. 마치 로또 1등이 전날 꾼 꿈에 이목이 집중되지만 사실 그 꿈엔 아무 의미가 없듯이 말이다. 이와 같은 사례가 수없이 많다. 사람들은 이해하기 힘든 결과에 어떤 논리적인 이유와 의미를 부여하려 하지만, 사실 우리 사회가 안고 돌아가는 굉장히 많은 비논리 중 하나일 뿐이다. 요새 즐겨보는 웹툰 &lt;지옥&gt;도 비슷한 것을 말하고 있다고 생각한다.&lt;/지옥&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;신의 실수일 거라고 생각했어요. 뭔가 착오가 있을 거라고… 그렇잖아요. 신이 무작위적으로 인간을 벌할 리가 없잖아요. 그런데… 그게 진실이더라구요. (중략) 그 거대한 무의미를 인간이 어떻게 견딜 수 있겠냐고요! 인류는 그럴 수 있는 존재가 아니잖아요! 인간은 의미를 필요로 해요. 이 기괴한 일이 세상을 더 낫게 만들기 위한 신의 의도라는 믿음! - 웹툰 &lt;지옥&gt; 중&lt;/지옥&gt;&lt;/p&gt; &lt;/blockquote&gt; &lt;blockquote&gt; &lt;p&gt;설사 그게 신이라고 하더라도 그 신의 의도가 새진리회에서 말하는 것과 같은 것이라면 우리는 그 신을 거부할 수밖에 없어요. 적어도 우리를 위한 신은 아닐 테니까요. - 웹툰 &lt;지옥&gt; 중&lt;/지옥&gt;&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;웹툰 &lt;지옥&gt;에서는 극단적인 상황을 가정했지만, 나는 지금 우리가 사는 사회에서도 얼마든지 많은 무의미가 존재한다고 생각한다. 우리는 자꾸 그 무의미를 견디지 못하고 좋은 결과를 맹목적으로 추켜세우고 나쁜 결과에 괜한 이유를 만든다.&lt;/지옥&gt;&lt;/p&gt; &lt;p&gt;그렇다면 노력을 할 필요가 없다는 말인가? 물론 그 정도로 내가 디스토피아적 관점을 가지고 있는 것은 아니다. 비록 성과가 정해지는 방식이 &lt;strong&gt;노력에 정비례하는 함수는 아니지만, 노력이 그 함수가 가진 변수들 중 하나임은 확실하다&lt;/strong&gt;. 따라서 노력을 할 이유가 없는 것은 결코 아니다. 내가 말하고자 하는 바는 &lt;strong&gt;결과가 말해주지 않는 것들에도 관심을 기울였으면 한다&lt;/strong&gt;는 것이다. 예전에 올림픽을 좋아하는 친구가 올림픽의 정신이 왜 존중(respect)인지에 대해 설명해준 적이 있다. 올림픽을 잘 모르는 나는 단순히 선수들이 상대방의 패배를 위해 자신의 승리를 위해 치열한 경기를 한다고 생각하곤 했다. 하지만 사실 올림픽의 철학에 따르면 이 악 물고 상대에게 최선을 다하는 것이 오히려 상대방을 존중하는 행동이라고 한다. 화려한 승리와 경력도 중요하지만, 사람들에게 정말 감동을 주는 것은 따로 있는 것 같다. 한 선수의 경기가 감동적인 이유는, 상대 선수를 꺾고 더 높은 기록을 세웠기 때문이 아니라, 그 기록 뒤에 오랜 노력과 경기에서 최선을 다하는 모습이 숨어있기 때문 아닐까 싶다. 이처럼 경쟁이 아닌 존중의 관점에서 결과를 바라보면, 승리도 패배도 모두 같은 이유로 아름다울 수 있다.&lt;/p&gt;</content><author><name>jaeyoon</name></author><category term="웹툰"/><category term="지옥"/><summary type="html">&gt; 작년과 올해를 살면서 가장 중요하게 생각했던 내용을 가사로 썼다. 마치 남에게 훈계하는 듯한 말투지만 사실은 나 자신에게 하는 이야기다. 멋모르고 밴드를 시작한 후 십 년이 지났다. 별의별 경험을 다 했다. 다양한 사람들도 만났다. 그러면서 한 가지 배운 것은, 사람</summary></entry><entry><title type="html">뒤늦은 2020년 계획</title><link href="http://blog.jaeyoon.io/2020/05/plan.html" rel="alternate" type="text/html" title="뒤늦은 2020년 계획"/><published>2020-05-04T19:11:20+00:00</published><updated>2020-05-04T19:11:20+00:00</updated><id>http://blog.jaeyoon.io/2020/05/plan</id><content type="html" xml:base="http://blog.jaeyoon.io/2020/05/plan.html">&lt;figure&gt;&lt;img data-action=&quot;zoom&quot; src=&quot;/assets/img/200502/concept.jpeg&quot; alt=&quot;컨셉충&quot; /&gt;&lt;figcaption&gt;강해지겠다는 컨셉&lt;/figcaption&gt;&lt;/figure&gt; &lt;p&gt;지난 몇달 간 일상이 무너질 정도로 힘든 일이 많았다. 아마 내가 너무 쉽게 무너진 것은 내 몸과 마음이 건강하지 못했기 때문이리라. 이에 2020년 올해에는 꼭 건강한 사람으로 변모하고자 다짐했고, 새로운 출발을 계획하려 한다. 내가 가장 먼저 해야 할 일은 다른 것을 욕심내기보다도 우선 일상으로 복귀하는 것이다.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;변화도 일상이 있을 때 가능하다 - &lt;a href=&quot;http://blog.naver.com/dlxuxlb/221915134098&quot; target=&quot;_blank&quot;&gt;블로그 일상로망스&lt;/a&gt;&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;그렇다면 나의 일상은 어떠해야 하는가? 이 또한 새롭게 마주하니 어려운 질문이었다. 과거에 일상적으로 해왔던 것들 중 무엇을 버리고 무엇을 다시 지속해야 하며, 새롭게 시작할 만한 일에는 무엇이 있을지 글을 쓰며 생각을 정리해보았다.&lt;/p&gt; &lt;h3 id=&quot;꾸준히-지속해야-할-것들&quot;&gt;꾸준히 지속해야 할 것들&lt;/h3&gt; &lt;p&gt;[1] 연구 배우기&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;아이디어 로그&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;지난 해부터 작성해오던 연구 아이디어 로그를 다시 틈틈이 작성하고자 한다. 아이디어가 생각날 때마다 터무니없더라도 생각이 든 계기와 생각한 바를 자세히 적어두자.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;교수님과의 미팅 충실히 준비하기&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;박사유학 기간 동안 나를 지도해주실 &lt;a href=&quot;https://cci.mit.edu/malone/&quot;&gt;Thomas Malone 교수님&lt;/a&gt;은 정말 열정적인 분이다. 매번 열정 가득한 메일을 보내셔서 무기력한 내가 부끄러워진다. 교수님께서 1년동안 박사생활 준비 차원에서 원격으로나마 매주 미팅을 하며 프로젝트에 참여할 것을 제안해주셨고, 이런 감사한 제안에 나도 그간의 게으름을 반성하고 내가 가진 능력을 총동원하여 프로젝트에 의미있는 기여를 하는 것이 목표이다. 매주 미팅을 충실히 준비하고, 생각나는 아이디어를 먼저 말씀드려 피드백을 받으며, 질문을 자주 하면서 많이 배우고자 한다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;페이퍼 많이 읽고 정리하기&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;페이퍼를 꾸준히 읽고 기억할 만한 페이퍼는 글로 풀어 쓰려 한다. 말주변이 없어서인지 알고 있는 개념이라고 생각해도 막상 말로 설명하면 궤변이 되어버릴 때가 많다. 구어체로 설명하는 식의 글을 한 번씩 써서 페이퍼를 온전히 이해하고 분야에 대한 지식도 쌓아가는 기회가 되었으면 한다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;딥러닝 입문하기&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;방학 때부터 coursera의 딥러닝 입문 수준의 강의를 듣을 계획이다. 이에 대해서는 아직 아는 것이 많지 않아 종강 후에 더 자세한 계획을 세워야 할 것 같다.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;[2] 영어 공부하기&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;영어회화 스터디&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;미드 프렌즈를 보며 회화를 공부하는 스터디에 꾸준히 참여할 계획이다.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;[3] 학업&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;학교 수업 공부&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;학업에 충실하기. 비대면강의가 좀더 오랜 기간 지속되더라도 미루지 말고 제때 듣기.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;[4] 운동하기&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;필라테스&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;작년 초에 시작한 필라테스를 계속 꾸준히 해야겠다. 체육시간에 늘 암묵적 깍두기 신세였던 예전을 생각하면 그래도 체력이 많이 발전했다. 그러나 진짜 건강하다고 말하기엔 너무 멀었다. 최소 주 3회는 반드시 가고 여력이 되면 방학에 좀더 동적인 운동도 추가적으로 할 생각이다.&lt;/p&gt; &lt;figure&gt;&lt;img data-action=&quot;zoom&quot; src=&quot;/assets/img/200502/exercise.gif&quot; alt=&quot;운동&quot; /&gt;&lt;figcaption&gt;이렇게라도 움직이자!&lt;/figcaption&gt;&lt;/figure&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;새롭게-시작하고자-하는-것들&quot;&gt;새롭게 시작하고자 하는 것들&lt;/h3&gt; &lt;p&gt;[1] 책읽기&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;트레바리 북클럽&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;사람은 책을 만들고, 책은 사람을 만든다. 아직은 조금이라도 강제성이 있어야 시간내어 읽을 것 같아 비싼 돈을 내고 북클럽에 가입했다. 대학에 입학하고 독서와 점차 멀어지면서 지금 당장은 순수하게 자발적으로 읽는 것이 쉽지 않겠다 싶었다. 어머니께서 ‘신과 함께’ 팟캐스트에서 트레바리 스타트업 창업자 이야기를 듣고 추천해주시기도 했고. 북클럽을 통해 평소 관심가지지 못했던 것들에 대해 읽으며 마음의 양식을 쌓아가려 한다.&lt;/p&gt; &lt;p&gt;가장 먼저 참여할 북클럽의 주제는 “나 알기”이다. 나조차 나를 잘 알지 못해 다른 사람의 인생을 살고 있다는 느낌을 줄곧 받는다. 거짓과 과장은 버리고, 나 자신에 대한 올바른 이해를 하고 있는 그대로의 나를 객관화하여 알아가기 위해 신청했다.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;[2] 봉사활동&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;멘토링 봉사활동&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;나누면서 살자고 늘 말만 하고, 실천하는 삶을 살지는 못한 것 같다. 아마도 나 스스로를 약자라고 생각하는 피해의식이 있었기 때문일 테다. 나 자신에게 신경쓰느라 다른 이의 아픔에 눈을 돌리지 못했다. 이에 이번 달부터 멘토링 봉사활동을 시작해 출국할 때까지 매주 하고자 한다.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;[3] 기록&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;틈틈이 글쓰기&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;글을 쓰며 생각을 정리하는 게 건전하지 못한 생각의 고리를 끊어내는 데 큰 도움이 된다. 생각하기 전에 말부터 나가니 말실수를 자주 하게 된다. 생각을 정리하는 연습을 충분히 해놓아야 언행도 바를 수 있는 것 같다. 개인적인 내용이 아닌 것은 종종 블로그에도 올릴 계획이다. 글에 대한 피드백을 받을 수 있는 좋은 통로인 것 같기 때문이다. 따끔하든 따뜻하든 피드백이 있다면 댓글 환영합니다.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;생각을 조심해라 말이 된다. &lt;br /&gt; 말을 조심해라 행동이 된다. &lt;br /&gt; 행동을 조심해라 습관이 된다.&lt;br /&gt; 습관을 조심해라 성격이 된다. &lt;br /&gt; 성격을 조심해라 운명이 된다. - 마거릿 대처&lt;/p&gt; &lt;/blockquote&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;워낙 작심삼일인 나라서 쉽지 않겠지만 이렇게 정리한 이상 반드시 실천할 것이다. 나의 꿈과 사랑하는 사람들을 위해 도전하는 삶을 살아야지.&lt;/p&gt;</content><author><name>jaeyoon</name></author><category term="계획"/><summary type="html">강해지겠다는 컨셉 지난 몇</summary></entry><entry><title type="html">미움받을 용기</title><link href="http://blog.jaeyoon.io/2020/05/adler.html" rel="alternate" type="text/html" title="미움받을 용기"/><published>2020-05-03T19:11:20+00:00</published><updated>2020-05-03T19:11:20+00:00</updated><id>http://blog.jaeyoon.io/2020/05/adler</id><content type="html" xml:base="http://blog.jaeyoon.io/2020/05/adler.html">&lt;h3 id=&quot;읽게-된-계기&quot;&gt;읽게 된 계기&lt;/h3&gt; &lt;p&gt;이 책을 읽게 된 계기는 우선 어머니가 추천해준 책들 중 한 권이었기 때문이다. 하지만 그 책들 중 내가 이 책을 가장 열심히 읽게 된 데는 또다른 이유가 있다. 책장을 몇 장 넘기지도 않았는데 다음과 같은 반가운 문장을 마주친 것이다.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;청년은 어린 시절부터 스스로에게 자신감이 없었다. (중략) 그래서일까? 남의 시선을 지나치게 의식하는 면이 있었다. 그리고 남의 행복을 진심으로 축복하지 못해 늘 자기혐오에 빠졌다.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;청년에 대한 내용을 읽자마자 내 이야기인가 싶어 솔깃했다. 책을 읽는 내내 청년의 말투도 참 성가시지만 나와 비슷한 면이 많다고 느꼈다. 이렇게 청년의 상황에 나를 대입한 것이 이 책을 읽은 가장 큰 동기이다. 결과적으로 이 책은 나에게 아주 적절한 처방을 해주었고, 행복해질 용기를 내도록 도와준 고마운 책이므로 내용을 자세히 정리해보고자 한다.&lt;/p&gt; &lt;h3 id=&quot;트라우마를-부정하라&quot;&gt;트라우마를 부정하라&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;원인론&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;원인론의 본질은 다음의 명제로 설명할 수 있다.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;과거의 사건(원인)이 현재의 나(결과)를 규정한다.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;원인론은 원인이 결과를 지배하고, 인간은 감정에 저항할 수 없는 존재라는 허무주의적 관점을 펼친다. 자유의지를 부정하고 인간을 기계처럼 바라보는 것이다.&lt;/p&gt; &lt;p&gt;원인론의 한계는 분명하다. 과거의 원인에 주목해서 상황을 설명하려 든다면, 모든 이야기는 저절로 ‘결정론’에 도달하게 된다. 즉 &lt;strong&gt;우리의 현재, 그리고 미래는 전부 과거 사건에 의해 결정되고 움직일 수 없는 것&lt;/strong&gt;이라고 말이다. (33쪽)&lt;/p&gt; &lt;p&gt;하지만 과연 그럴까? 예컨대 책속의 청년은 친구가 방 안에서 꼼짝도 하지 않는 이유가 어린 시절 부모에게 학대를 받고 자랐기 때문이라고 생각한다. 그러나 청년의 논리에 따르면 부모에게 학대를 받고 자란 사람은 모두 청년의 친구와 같은 결과, 즉 집안에 틀어박혀 지내야 앞뒤가 맞다.&lt;/p&gt; &lt;p&gt;또다른 예시로 철학자는 감기로 심한 열이 난 환자가 의사에게 진찰을 받는 과정을 든다. 의사가 “환자 분이 감기에 걸린 것은 어제 옷을 얇게 입고 나갔기 때문입니다”하고 진단을 내렸을 때 만족할 환자는 없을 것이다. 문제는 지금 고열에 시달리고 있다는 증상이기 때문이다. 전문적인 의사라면 과거의 원인만 짚어내기보다 현재 환자의 증상을 해결하기 위해 약을 처방하거나 주사를 놓을 것이다.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;목적론&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;위와 같은 이유로 이 책에 등장하는 철학자는 원인론과 대치되는 목적론을 옹호한다. 목적론은 어디까지나 “&lt;strong&gt;인간은 변할 수 있다&lt;/strong&gt;“를 전제로 한다. &lt;em&gt;왜 인간이 변할 수 있는가?&lt;/em&gt; 인간은 과거의 원인에 영향을 받아 행동하는 것이 아니라 스스로 정한 목적을 향해 움직이기 때문이다. 즉 목적론은 &lt;strong&gt;과거의 원인이 아닌 현재의 목적&lt;/strong&gt;을 본다.&lt;/p&gt; &lt;p&gt;목적론의 세상에서 인간은 끊임없이 자신의 &lt;strong&gt;생활양식(lifestyle)&lt;/strong&gt;을 선택하며 살아간다. 아들러에 따르면 생활양식이란 삶에 대한 사고나 행동의 경향을 가리킨다. 한 사람이 세계를 어떻게 바라보는가, 그리고 자신을 어떻게 바라보는가 하는 &lt;strong&gt;의미 부여 방식을 집약시킨 개념&lt;/strong&gt;이다. 성격 대신 생활양식이라는 용어를 사용하는 이유는 성격이란 말에는 변하지 않는다는 뉘앙스가 있지만, 생활양식이라면 변용시키는 것도 가능할 테기 때문이다. (59쪽) 다시 말해 생활양식은 선천적으로 주어진 것이 아니라 스스로 선택한 것이므로 다시 선택하는 것도 얼마든지 가능하다. 따라서 인간은 변할 수 있는 것이다.&lt;/p&gt; &lt;p&gt;목적론이 세상을 어떻게 설명하는지 다음 세 가지 경우를 통해 좀더 살펴보자.&lt;/p&gt; &lt;ol&gt; &lt;li&gt; &lt;p&gt;트라우마란 존재하지 않는다.&lt;/p&gt; &lt;p&gt;위 원인론에서 언급한 사례를 다시 살펴보자. 청년이 ‘불안해서 밖으로 나오지 못한다’고 여긴 친구는 철학자에 따르면 사실 ‘밖으로 나오지 못하니까 불안한 감정을 지어내는 것’이다. 가령 그 친구가 ‘나는 부모에게 학대받아서 사회에 적응하지 못하는 것이다’라고 생각한다면, 그것은 그의 마음속에서 그렇게 생각하고 싶은 ‘목적’이 있기 때문이다. (38쪽) 왜 이런 목적을 가지게 되었을까? 아마도 밖에 나가지 않고 내내 방 안에 틀여박혀 있으면 부모가 걱정을 해주고 관심을 한 몸에 받을 수 있기 때문일 것이다.&lt;/p&gt; &lt;p&gt;이처럼 어떠한 경험도 그 자체는 성공의 원인도 실패의 원인도 아니다. 우리는 경험을 통해서 받은 충격(트라우마)로 고통받는 것이 아니라, 경험 안에서 목적에 맞는 수단을 찾아낸다. 즉 &lt;strong&gt;과거의 경험 그 자체에 의해 결정되는 것이 아니라, 경험에 부여한 의미에 따라 현재 자신의 삶을 결정&lt;/strong&gt;하는 것이다. (37쪽)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;인간은 분노를 지어낸다.&lt;/p&gt; &lt;p&gt;철학자는 분노를 언제든 넣었다 빼서 쓸 수 있는 ‘도구’라고 말한다. 전화가 오면 순식간에 집어넣었다가 전화를 끊으면 다시 꺼낼 수 있는. (43쪽) 예컨대 청년은 별 것 아닌 일로 웨이터에게 큰소리를 내는 실수를 저질렀다. &lt;strong&gt;이는 청년이 분노라는 감정에 지배받았기 때문이 아니라, 큰소리를 내고자 하는 목적이 먼저였기 때문이다. 그는 말로 차근차근 설명하는 것이 귀찮아서 저항하지도 않는 상대를 더 값싼 수단으로 굴복시키려 했다&lt;/strong&gt;. (42~43쪽) 만약 청년의 목적이 큰 소리를 내고자 하는 게 아니었다면, 그는 굳이 분노라는 감정을 동원할 필요가 없었을 것이다. 이처럼 목적론에 따르면 인간은 감정에 지배받지 않고, 감정은 수단에 불과하다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;나의 불행은 스스로 선택한 것&lt;/p&gt; &lt;p&gt;&lt;strong&gt;지금 내가 불행한 것은 내 손으로 ‘불행한 상태’를 선택했기 때문이다. 불행의 별 아래에서 태어났기 때문이 아니라.&lt;/strong&gt; (55쪽) 내가 다른 누군가가 되고 싶어 하며 불행해 하는 까닭은 무엇이 주어졌느냐에만 주목하기 때문이다. 하지만 중요한 것은 주어진 것을 어떻게 활용하느냐이다. 물론 이러한 선택이 늘 의식적인 것은 아니다. 게다가 선택에는 외적 요인, 즉 인종과 국적, 문화, 가정환경 등이 크게 영향을 미친다. 그럼에도 불행한 상태를 선택한 장본인이 나 자신임은 변치 않는다.&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;위 세 가지 경우 모두 인간은 변할 수 있다는 전제와 상통한다. 과거의 경험이나 감정, 주어진 것에 의해 지배받는 것이 아니라 그것들에 부여한 의미 즉 스스로 선택한 생활양식에 따라 어떤 삶을 살지가 결정된다. 변화의 선택권은 언제나 스스로에게 있는 것이다.&lt;/p&gt; &lt;p&gt;그렇다면 &lt;em&gt;왜 사람들은 쉽게 변하지 않는가?&lt;/em&gt; 그들이 변하지 않는 것은, &lt;strong&gt;스스로 변하지 않겠다고 결심했기 때문&lt;/strong&gt;이다. &lt;em&gt;왜 변하지 않겠다고 결심하는가&lt;/em&gt;? 지금의 생활양식에 익숙해져서 이대로 변하지 않고 사는 것이 더 편하니까. ‘이대로의 나’로 살아간다면 눈앞에 닥친 일에 어떻게 대처해야 할지 여태까지의 경험을 통해 쉽게 추측할 수 있다. 반면 새로운 생활양식을 선택하면 새로운 자신에게 무슨 일이 일어날지도 모르고, 눈앞의 일에 어떻게 대처해야 할지도 모른다. 미래를 예측할 수 없어 불안한 삶을 살게 되는 것이다. 즉 인간은 더 힘들고, 더 불행한 삶이 기다리고 있을 지 모른다는 두려움에 생활양식을 쉽게 바꾸려 하지 않는다.&lt;/p&gt; &lt;p&gt;그렇다면 &lt;em&gt;어떻게 하면 생활양식을 바꿀 수 있는가?&lt;/em&gt; &lt;strong&gt;생활양식을 바꾸려고 할 때, 우리는 큰 용기가 있어야 한다&lt;/strong&gt;. 변함으로써 생기는 불안을 선택할 것이냐, 변하지 않아서 따르는 불만을 선택할 것이냐. 지금 당장 해야 할 일은 바로 지금의 생활양식을 버리겠다고 결심하는 것이다. 시도하지 않으면 단 한 발자국도 나아갈 수 없다. 세계와 자신에 대해 어떤 의미를 부여하느냐(생활양식)에 따라 세계와 관계를 맺는 법, 그리고 행동도 변할 수밖에 없으므로, 나는 ‘나’인 채로 그저 생활양식을 고르기만 하면 되는 것이다.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;자네가 불행한 것은 과거의 환경 탓이 아니네. 그렇다고 능력이 부족해서도 아니고. 자네에게는 그저 용기가 부족한 것 뿐이야. 말하자면 행복해질 용기가 부족한 거지. (63쪽)&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;이러한 맥락에서 아들러의 심리학을 용기의 심리학이라고도 부른다.&lt;/p&gt; &lt;h3 id=&quot;모든-고민은-인간관계에서-비롯된다&quot;&gt;모든 고민은 인간관계에서 비롯된다&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;왜 자기 자신을 싫어하는가&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;자기 자신을 싫어하는 사람들은 남에게 부정당하는 것을 두려워한다. 누군가에게 무시당하고, 거절당하고, 마음에 깊은 상처를 입는 것을 무서워한다. 즉 그들의 ‘목적’은 ‘다른 사람과의 관계에서 상처받지 않는 것’이다.&lt;/p&gt; &lt;p&gt;그렇다면 어떻게 이 목적을 이룰 수 있을까? 답은 간단하다. 자신의 단점을 찾아내서 스스로를 미워하고 인간관계에 발을 들여놓지 않으면 된다. 그렇게 자신의 껍데기 안에 틀어박혀 있으면 누구와도 관계를 맺지 않아도 되고, 남에게 거절을 당했을 때도 이유를 댈 수 있다. 나는 이런 단점이 있어 거절당했다고, 이런 단점만 없으면 나도 사랑받을 수 있다고.&lt;/p&gt; &lt;p&gt;하지만 &lt;strong&gt;인간관계에서 상처받지 않는 것은 기본적으로 불가능하다&lt;/strong&gt;. 인간관계에 발을 들여놓으면 크든 작든 상처를 받게 되어 있고, 스스로도 의도했든 아니든 누군가에게 상처를 주게 된다.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;아들러는 말했네. “고민을 없애려면 우주 공간에 그저 홀로 살아가는 수밖에 없다.” 하지만 그것은 불가능하지.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;이에 우리는 일단 ‘지금의 나’를 받아들이고, 결과가 어떻든지 간에 앞으로 나아갈 용기를 가져야 한다.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;열등감은 주관적인 감정이다&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;열등감이란 자신에 대한 가치판단이다. 예컨대 “나는 못생겼어” 라는 열등감은 어디까지나 인간관계 속에서 타인과의 비교를 통해 만들어낸 주관적인 감정이다. 만약 비교해야 할 타인이 존재하지 않았다면 없었을 객관적인 ‘열등성’이 아닌 주관적인 ‘열등감’이다. 즉 내 키를 장점으로 볼지 단점으로 볼지는 모두 주관에 달린 문제라서 스스로의 선택에 달린 것이다.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;우리는 객관적 사실을 움직이지는 못해. 하지만 주관적 해석은 얼마든지 움직일 수가 있지. 우리는 주관적인 세계에 살고 있네.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;아들러는 열등감이 누구에게나 있다고 인정했다. 열등감 자체는 사실 조금도 나쁜 것이 아니다. 인간은 무기력한 상태에서 벗어나 향상되기를 바라는 본능을 가지고 있기 때문이다. 따라서 우월성 추구도 열등감도 병이 아니라 건강하고 정상적인 노력과 성장을 하기 위한 자극이다. 즉 열등감도 제대로만 발현하면 노력과 성장의 촉진제가 되는 것이다. 인간은 내면에 자리한 열등감을 없애기 위해 더욱 전진하곤 한다.&lt;/p&gt; &lt;p&gt;하지만 문제는 열등감이 아니라 열등 콤플렉스이다. 현재 우리 사회에서는 ‘콤플렉스’라는 말이 열등감과 같은 말처럼 쓰이고 있다. 하지만 아들러에 따르면 콤플렉스는 ‘복잡하게 얽힌 도착적인 심리 상태’를 가리키는 용어로 열등감과는 무관하다. 그중에서도 열등 콤플렉스란 자신의 열등감을 변명거리로 삼기 시작한 상태를 말한다. 예컨대 “나는 못생겼기 때문에 결혼할 수가 없다”고 말하는 것은 열등 콤플렉스이다. 이는 원래는 어떤 인과관계도 없는 것을, 마치 중대한 인과관계가 있는 것처럼 스스로를 속이는 것이다. (인과관계가 없는 이유는 위에서 설명한 목적론적 관점에서 바라보면 알 수 있다.)&lt;/p&gt; &lt;p&gt;&lt;strong&gt;열등 콤플렉스의 또다른 측면은 우월 콤플렉스와 동전의 앞뒷면처럼 밀접하게 연결되어 있다는 점이다&lt;/strong&gt;. “A라서 B를 할 수 없다”고 말하는 사람은 “A만 아니면 나는 유능하고 가치 있는 존재”임을 은연중에 암시하는 셈이다. 우월 콤플렉스란 마치 자신이 우월한 것처럼 행동하며 ‘거짓 우월성’에 빠지는 것을 가리킨다. 예컨대 우월 콤플렉스를 가진 사람은 자신이 권력자와 각별한 사이라는 것을 짐짓 어필함으로써 그를 통해 자신이 특별한 존재인 것처럼 행세한다.&lt;/p&gt; &lt;p&gt;하지만 &lt;strong&gt;정말로 자신 있는 사람은 자랑하지 않는다&lt;/strong&gt;. 열등감이 심하니까 자랑하는 것일 뿐. 자신이 우월하다는 것을 일부러 과시하려고 한다. 그렇게라도 하지 않으면 주위에 누구 한 사람 ‘이런 나’를 인정해주지 않을까봐 겁이 나니깐. 이것이 바로 완벽한 우월 콤플렉스이다.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;인생은 타인과의 경쟁이 아니다.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;그렇다면 우리는 열등감을 어떻게 해야 할까? 아들러가 앞서 말한 인간의 본능인 “우월성 추구”란 남보다 더 높은 곳으로 가려는 경쟁 의사를 말하지 않는다. 그저 자신의 발을 한 발 앞으로 내딛으려는 의지를 가리킨다. 따라서 건전한 열등감이란 타인과 비교해서 생기는 것이 아니라 “이상적인 나”와 비교해서 생기는 것이다. 우리는 저마다 다른 성별, 연령, 지식, 경험, 외모를 가지고 있지만 &lt;strong&gt;그럼에도 불구하고 ‘같지는 않지만 대등한’ 존재이다&lt;/strong&gt;. 그 차이를 선악이나 우열과 엮어선 안된다. 어떤 차이가 있든 우리는 대등하니까.&lt;/p&gt; &lt;p&gt;모든 인간은 대등하며 같은 길을 걷는다. 앞서 걸으나 뒤에서 걸으나 관계없이 &lt;strong&gt;우리는 세로축이 존재하지 않는 평평한 공간을 걷고 있다&lt;/strong&gt;. 우리가 걷는 것은 누군가와 경쟁하기 위해서가 아니다. 지금의 나보다 앞서 나가려는 것이야말로 가치있다.&lt;/p&gt; &lt;h3 id=&quot;인생의-과제&quot;&gt;인생의 과제&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;행동의 목표&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;1) 자립할 것&lt;br /&gt;2) 사회와 조화를 이루며 살아갈 것&lt;/p&gt; &lt;p&gt;&lt;strong&gt;심리적 목표&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;1) “내게는 능력이 있다”는 의식을 가질 것&lt;br /&gt; 2) “사람들은 내 친구다”는 의식을 가질 것&lt;/p&gt; &lt;h3 id=&quot;마주친-글귀&quot;&gt;마주친 글귀&lt;/h3&gt; &lt;blockquote&gt; &lt;p&gt;철학자: 아는지 모르겠지만 우물물의 온도는 1년 내내 18도를 유지한다네. 이것은 누가 측정하든지 간에 똑같은 객관적인 수치지. 하지만 여름에 마시는 우물물은 차갑게 느껴지고, 겨울에 마시는 우물물은 따뜻하게 느껴진다네. 온도계는 늘 18도를 유지하지만 여름과 겨울에 느끼는 정도가 다른 것이지.&lt;/p&gt; &lt;p&gt;청년: 요컨대 환경의 변화에 따라 착각하게 된다?&lt;/p&gt; &lt;p&gt;철학자: 아니, 착각이 아닐세. 그때 ‘자네’가 우물물이 차갑다거나 따뜻하다고 느낀 것은 움직일 수 없는 사실이네. 주관적인 세계에 살고 있다는 것은 바로 그런 거지. 우리는 ‘어떻게 보고 있는가’라는 주관에 지배받고 있고, 자신의 주관에서 벗어날 수 없다네. 지금 자네의 눈에는 세계가 복잡기괴한 혼돈처럼 비춰질 걸세. 하지만 &lt;strong&gt;자네가 변한다면 세계는 단순하게 바뀔 걸세. 문제는 세계가 어떠한가가 아니라, 자네가 어떠한가 라는 점이라네.&lt;/strong&gt;&lt;/p&gt; &lt;/blockquote&gt; &lt;blockquote&gt; &lt;p&gt;세계가 어둡다고 한탄할 것이 아니라 선글라스를 벗으면 되네. 맨눈에 비치는 세계는 강렬하고 눈이 부셔서 절로 눈을 감게 될지도 모르네. 다시 선글라스를 찾게 될지도 모르네. &lt;strong&gt;그래도 선글라스를 벗을 수 있을까? 세계를 정면으로 바라볼 수 있을까? 자네에게 그런 ‘용기’가 있을까? 그게 관건이지&lt;/strong&gt;.&lt;/p&gt; &lt;/blockquote&gt; &lt;blockquote&gt; &lt;p&gt;그는 그래도 상관없다고 했네. 아들러파의 존재 자체가 잊혔다는 사실, 그것이야말로 그의 사상이 일개 학문에서 탈피하여 사람들의 상식(common sense)이 된다는 것을 의미하니까. (28쪽)&lt;/p&gt; &lt;/blockquote&gt; &lt;blockquote&gt; &lt;p&gt;청년: 이 세계는 평등하지 않으며 지금도 인종이나 국적, 민족의 차이가 엄연히 존재합니다. 그러니 ‘무엇이 주어졌는가’에 주목하는 것은 당연해요. 선생님, 선생님의 말씀은 현실을 무시한 탁상공론에 불과하다고요!&lt;/p&gt; &lt;p&gt;철학자: 현실을 무시하는 것은 자네지. ‘&lt;strong&gt;무엇이 주어졌는가’에 집착한다고 해서 현실이 변하나&lt;/strong&gt;? 우리는 교환이 가능한 기계가 아닐세. 우리에게 필요한 것은 교환이 아니라 고쳐나가는 것이야.&lt;/p&gt; &lt;/blockquote&gt; &lt;blockquote&gt; &lt;p&gt;철학자: 아니, 자네를 탓하는 게 아닐세. 오히려 아들러의 목적론은 “&lt;strong&gt;지금까지의 인생에 무슨 일이 있었든지 앞으로의 인생에는 아무런 영향도 없다&lt;/strong&gt;“라고 말해주는 거지. 인생을 결정하는 것은 ‘지금, 여기’를 사는 자네라고 말일세.&lt;/p&gt; &lt;p&gt;청년: 내 인생은 지금, 여기에서 결정된다?&lt;/p&gt; &lt;p&gt;철학자: 그래, 과거는 존재하지 않으니까.&lt;/p&gt; &lt;/blockquote&gt; &lt;blockquote&gt; &lt;p&gt;분노란 커뮤니케이션의 한 형태일 뿐이며 화내지 않는 커뮤니케이션도 얼마든지 가능하다. 우리는 분노를 표출하지 않고도 의사소통을 할 수 있고 나를 받아들이게 할 수 있다. 경험을 통해 그것을 알게 되면 자연히 &lt;strong&gt;분노라는 도구에 의지할 필요가 없어진다&lt;/strong&gt;.&lt;/p&gt; &lt;/blockquote&gt; &lt;blockquote&gt; &lt;p&gt;불행을 무기로 상대방을 지배하려고 해. 자신이 얼마나 불행하고, 얼마나 괴로운지 알림으로써 주변 사람들 – 이를테면 가족이나 친구 – 을 걱정시키고, 그들의 말과 행동을 속박하고 지배하려 들지. 첫날 말했던, 집에 틀어박혀서 지내는 사람들은 곧잘 불행을 무기로 하는 우월감에 빠지네. 아들러가 “&lt;strong&gt;오늘날 연약함은 매우 강한 권력을 가진다&lt;/strong&gt;“라고 지적했을 정도야.&lt;/p&gt; &lt;/blockquote&gt; &lt;blockquote&gt; &lt;p&gt;그러자 할머니께서 그 친구에게 이렇게 말씀하셨다고 하네. “&lt;strong&gt;네 얼굴을 주의 깊게 보는 사람은 너뿐이란다&lt;/strong&gt;.” 그날 이후로 그는 삶이 조금 편해졌다고 하더군.&lt;/p&gt; &lt;/blockquote&gt;</content><author><name>jaeyoon</name></author><category term="독서"/><summary type="html">### 읽게 된 계기 이 책을 읽게 된 계기는 우선 어머니가 추천해준 책들 중 한 권이었기 때문이다. 하지만 그 책들 중 내가 이 책을 가장 열심히 읽게 된 데는 또다른 이유가 있다. 책장을 몇 장 넘기지도 않았는데 다음과 같은 반가운 문장을 마주친 것이다. &gt; 청년</summary></entry><entry><title type="html">Human-AI collaboration</title><link href="http://blog.jaeyoon.io/2020/01/human-ai.html" rel="alternate" type="text/html" title="Human-AI collaboration"/><published>2020-01-23T19:11:20+00:00</published><updated>2020-01-23T19:11:20+00:00</updated><id>http://blog.jaeyoon.io/2020/01/human-ai</id><content type="html" xml:base="http://blog.jaeyoon.io/2020/01/human-ai.html">&lt;h3 id=&quot;들어가기-전에&quot;&gt;들어가기 전에&lt;/h3&gt; &lt;p&gt;이 글은 &lt;a href=&quot;https://www.youtube.com/watch?index=2&amp;amp;fbclid=IwAR3PjFRhwmXlVNGTArRRn3o8ExTf3Gk0-8BZF3SjZ90q9VTa8afYz7sSgAk&amp;amp;list=PLgJQ1dsC4sfef1ez-5kJCFykyt6_6wLev&amp;amp;v=s6S9qsGs5kM&amp;amp;app=desktop&quot;&gt;카이스트 김주호 교수님의 워크숍 영상&lt;/a&gt;을 토대로 작성되었다. 보통 레퍼런스는 마지막에 달곤 하지만, 워낙 많이 참고했고 이 포스팅보다 Human-AI collaboration에 대해 훨씬 잘 설명한 자료이기 때문에 앞서 밝힌다. 그외에도 다음과 같은 자료들을 참고하였다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://hbr.org/2019/09/learning-to-work-with-intelligent-machines&quot;&gt;HBR - “Learning to Work with Intelligent Machines”&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.ted.com/talks/shyam_sankar_the_rise_of_human_computer_cooperation&quot;&gt;TED - “The Rise of Human-AI Cooperation”&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Ghost-Work-Silicon-Building-Underclass-ebook/dp/B07FKB6CZK&quot;&gt;도서 - “Ghost Work: How to Stop Silicon Valley from Building a New Global Underclass”&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://hci.stanford.edu/winograd/papers/ai-hci.pdf&quot;&gt;Terry Winograd - “Shifting viewpoints: Artificial intelligence and human–computer interaction”&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;human-vs-ai&quot;&gt;Human vs AI&lt;/h3&gt; &lt;figure&gt;&lt;img data-action=&quot;zoom&quot; src=&quot;/assets/img/200117/alphago.jpg&quot; /&gt;&lt;figcaption&gt; 이세돌과 알파고의 대국 &lt;/figcaption&gt;&lt;/figure&gt; &lt;p&gt;세계적으로 뜨거운 이슈였던 이세돌과 알파고의 대국. 많은 사람들이 “AI” 하면 가장 먼저 떠올리는 장면 아닐까?&lt;/p&gt; &lt;p&gt;사진 속 이세돌 선수와 알파고는 바둑판을 사이에 두고 대치하고 있다. 결과는 이세돌 선수의 패배였다. 이러한 인공지능의 발전을 두고 언론에서는 다음과 같은 위협적인 제목의 기사를 쏟아내곤 한다.&lt;/p&gt; &lt;figure&gt;&lt;img data-action=&quot;zoom&quot; src=&quot;/assets/img/200117/news.png&quot; /&gt;&lt;figcaption&gt; 언론보도 &lt;/figcaption&gt;&lt;/figure&gt; &lt;p&gt;블록버스터 영화에서는 아예 인공지능이 전쟁까지 일으킨다.&lt;/p&gt; &lt;figure&gt;&lt;img data-action=&quot;zoom&quot; src=&quot;/assets/img/200117/war.jpeg&quot; /&gt;&lt;figcaption&gt; 블록버스터 영화 포스터 &lt;/figcaption&gt;&lt;/figure&gt; &lt;p&gt;이러한 형상화는 많은 사람들에게 &lt;strong&gt;인간과 인공지능 간 대립구도&lt;/strong&gt;를 각인시켰다. 물론 대립에 대한 고민이 의미 없는 것은 아니다. 실제로 인공지능에 의해 대체된 직무도 존재한다. 다만 시대의 흐름에 따라 직업과 전공이 뜨고 지는 것은 자연스러운 일이지 않나 싶다. 그 부작용을 완화할 방법을 모색하는 논의는 건설적이지만, 많은 경우 대립에 초점이 지나치게 맞추어지고 있다.&lt;/p&gt; &lt;h3 id=&quot;human-ai-collaboration&quot;&gt;Human-AI collaboration&lt;/h3&gt; &lt;p&gt;이번엔 조금 다른 모습의 대전을 생각해보자.&lt;/p&gt; &lt;figure&gt;&lt;img data-action=&quot;zoom&quot; src=&quot;/assets/img/200117/advanced-chess.jpeg&quot; /&gt;&lt;figcaption&gt; Advanced Chess &lt;/figcaption&gt;&lt;/figure&gt; &lt;p&gt;인간과 인공지능이 한 팀이 되어 체스 게임을 하고 있다. 실제로 2005년에 주최된 한 프리스타일 체스 대회에서는 인간과 컴퓨터가 자유롭게 팀을 이루어 체스를 둘 수 있었다. 결과는 어땠을까?&lt;/p&gt; &lt;figure&gt;&lt;img data-action=&quot;zoom&quot; src=&quot;/assets/img/200117/result.png&quot; /&gt;&lt;figcaption&gt; 프리스타일 체스 대회 결과 &lt;/figcaption&gt;&lt;/figure&gt; &lt;p&gt;흥미롭게도 이 대회의 최종 우승자는 뛰어난 체스 선수와 슈퍼컴퓨터 팀이 아니라, 세 대의 일반 노트북을 사용한 두 아마추어 선수 팀이었다. 평균적 인간과 평균적 컴퓨터가 우수한 인간과 우수한 컴퓨터를 이겨낸 것이다.&lt;/p&gt; &lt;p&gt;두 아마추어 선수는 특정 움직임에 대해 깊이 분석하기 위해 컴퓨터를 능률적으로 이용하는 능력이 뛰어났다. 효율적인 프로세스의 힘이 계산 능력과 체스 지식을 보완해준 것이다. 즉 &lt;strong&gt;AI 자체의 퍼포먼스와 인간의 퍼포먼스 자체도 중요하지만, 둘 사이의 인터랙션을 어떻게 설계하느냐&lt;/strong&gt; 역시 못지않게 중요함을 말해주고 있다.&lt;/p&gt; &lt;p&gt;이처럼 대립보다는 협업에 방점을 찍는 것이 앞으로 AI가 추구해야 할 바람직한 방향 아닐까? 이런 맥락에서 Human-AI collaboration이 HCI 학계에서 연구 키워드로 대두했다.&lt;/p&gt; &lt;h3 id=&quot;artificial-artificial-intelligence&quot;&gt;“Artificial” Artificial Intelligence&lt;/h3&gt; &lt;p&gt;사실 AI 기술 자체도 사람의 힘을 굉장히 많이 빌리고 있다. 컴퓨터 비전 관련 AI가 다른 세부 분야에 비해 가장 빠르게 발전할 수 있었던 이유 중 하나는 풍부한 트레이닝 데이터셋 덕분이다. 대표적인 예로 &lt;a href=&quot;http://www.image-net.org/&quot; target=&quot;_blank&quot;&gt;ImageNet&lt;/a&gt;을 들 수 있다. 이러한 데이터셋이 결코 그냥 얻어지지는 것은 아니다. 기계가 아닌 사람의 힘으로 데이터를 모으는 과정이 동반되어야 한다. 하지만 &lt;strong&gt;기술의 장점을 강조하다보니 이러한 사람의 역할은 감춰지곤 한다&lt;/strong&gt;.&lt;/p&gt; &lt;figure&gt;&lt;img data-action=&quot;zoom&quot; src=&quot;/assets/img/200117/mturk.jpeg&quot; /&gt;&lt;figcaption&gt; Mechanical Turk &lt;/figcaption&gt;&lt;/figure&gt; &lt;p&gt;18세기 Mechanical Turk라는 체스를 두는 기계가 있었다. 대부분의 게임을 이기면서 선풍적인 인기를 끌었지만, 이는 사실 기계 내부에 뛰어난 체스 선수가 숨어 있는 사기극이었다.&lt;/p&gt; &lt;figure&gt;&lt;img data-action=&quot;zoom&quot; src=&quot;/assets/img/200117/amazon_mturk.jpg&quot; /&gt;&lt;figcaption&gt; Amazon Mechanical Turk &lt;/figcaption&gt;&lt;/figure&gt; &lt;p&gt;Amazon은 2005년부터 &lt;strong&gt;Mechanical Turk&lt;/strong&gt;라는 같은 이름의 서비스를 운영하고 있다. 이 서비스는 크라우드소싱 플랫폼으로, 태스크를 올리면 많은 사람들이 조금씩 수행해서 특정한 공동의 목표를 달성할 수 있는 곳이다. 예컨대 이미지에 해당하는 단어를 태깅하는 태스크를 올려 이미지 데이터셋을 확보하는 식이다.&lt;/p&gt; &lt;p&gt;Mechanical Turk라는 서비스명은 이러한 사람의 역할을 강조한다. 즉 AI 기술의 이면에는 데이터 생성이나 품질 검사 등 사람들의 노력이 존재한다는 것이다. 이를 두고 혹자는 “Artificial” Artificial Intelligence라고 칭하기도 한다. 또한 앞서 언급한 Ghost Work라는 도서에는 &lt;em&gt;“These people doing ‘ghost work’ make the internet seem smart”&lt;/em&gt; 라는 문구가 등장하기도 한다.&lt;/p&gt; &lt;p&gt;이런 맥락에서 &lt;a href=&quot;http://hci.stanford.edu/winograd/papers/ai-hci.pdf&quot; target=&quot;_blank&quot;&gt;HCI 연구가 AI 연구의 반대급부&lt;/a&gt;라고도 볼 수 있다. HCI가 AI를 배척하거나 한다는 의미는 결코 아니다. 오히려 교집합이 굉장히 크다. AI쪽 전공자가 HCI 연구를 하는 경우도 많고, 역으로 딥러닝을 methodology로 이용하는 HCI 프로젝트도 많다. “반대급부”라 함은, &lt;strong&gt;모델의 퍼포먼스 뿐만 아니라 사람과의 상호작용도 동등한 비중을 두고 고려&lt;/strong&gt;한다는 의미이다.&lt;/p&gt; &lt;h3 id=&quot;사례-소개&quot;&gt;사례 소개&lt;/h3&gt; &lt;p&gt;그렇다면 사람과의 상호작용을 어떻게 고려할 수 있을까? 구체적인 사례로 두 페이퍼를 살펴보자.&lt;/p&gt; &lt;p&gt;우선 첫 번째 페이퍼는 스탠포드 HCI랩에서 지난 해 HCOMP에 퍼블리시한 &lt;a href=&quot;https://www.aaai.org/ojs/index.php/HCOMP/article/view/5282&quot; target=&quot;_blank&quot;&gt;AI-Based Request Augmentation to Increase Crowdsourcing Participation&lt;/a&gt;이다. 기존 연구에서는 머신러닝 데이터셋을 마련할 때 퍼포먼스 자체에만 초점을 두고 “어떤 데이터가 필요한가”에만 집중하곤 한다. 하지만 이 연구는 인간과의 인터랙션에도 동등한 비중을 두고 “어떻게 데이터를 얻을 것인가”에 대해서도 고민한 페이퍼이다.&lt;/p&gt; &lt;p&gt;두 번째는 카이스트 김주호 교수님 연구실의 &lt;a href=&quot;https://kixlab.github.io/website-files/2020/chi2020-SolutionChat-paper.pdf&quot; target=&quot;_blank&quot;&gt;SolutionChat: Real-time Moderator Support for Chat-based Structured Discussion&lt;/a&gt;이다. 이 연구는 온라인 채팅에서 디스커션을 이끄는 진행자와 NLP를 통한 메시지 추천 시스템의 인터랙션을 다룬다. 사실 이 연구는 내가 참여했던 프로젝트라 할 말이 참 많은데, 더 자세한 것은 나중에 포스팅에 쓰기로!&lt;/p&gt;</content><author><name>jaeyoon</name></author><category term="HCI"/><category term="연구"/><category term="인간-컴퓨터 상호작용"/><category term="Human-AI collaboration"/><summary type="html">### 들어가기 전에 이 글은 [카이스트 김주호 교수님의 워크숍 영상](https://www.youtube.com/watch?index=2&amp;fbclid=IwAR3PjFRhwmXlVNGTArRRn3o8ExTf3Gk0-8BZF3SjZ90q9VTa8afYz7sSgAk&amp;lis</summary></entry><entry><title type="html">첫 인터뷰 Part 2: 인터뷰 내용</title><link href="http://blog.jaeyoon.io/2020/01/interview-2.html" rel="alternate" type="text/html" title="첫 인터뷰 Part 2: 인터뷰 내용"/><published>2020-01-08T22:11:20+00:00</published><updated>2020-01-08T22:11:20+00:00</updated><id>http://blog.jaeyoon.io/2020/01/interview-2</id><content type="html" xml:base="http://blog.jaeyoon.io/2020/01/interview-2.html">&lt;p&gt;인터뷰 내용 중 기억에 남는 부분을 여기 남긴다. 내가 한국어로 두뇌가 돌아가는 사람이라 뒤늦게 영어로 복기하는 데 애먹었다. 군데군데 표현이 어설플 수 있으니 이해 바란다.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;A: Hi, Jaeyoon. I found your application very interesting. Am I pronouncing your name correctly?&lt;/strong&gt;&lt;br /&gt; 나: Yes, your pronunciation is perfect.&lt;br /&gt; A: Great, I am A. I study xx and publish at conferences like yy. I know that you didn’t mention my name in your SOP, and that’s totally fine. Even if you don’t get to work with me, I can make a reference to B you mentioned in the essay, or you getting co-advised by me and B is also a possibility.&lt;br /&gt; 나: I see. That is an answer to my first question, so thank you. My research interest is ~~, which I think has an overlap with your research area to some extent. It’s an honor to get this kind of opportunity.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;제일 많이 연습한 게 초반부에 말할 자기소개였는데, 초반부에는 내가 준비한 걸 말할 기회가 없을 정도로 A교수님이 먼저 말씀을 많이 하시며 긴장을 풀어주셨다.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;strong&gt;A: Okay then, let’s start from the first question I gave you. Tell me your “why.” Why do you want to pursue a PhD?&lt;/strong&gt;&lt;br /&gt; 나: I guess it’s because doing HCI research aligns with my vision of the future. I believe increasingly more and more social challenges need to be addressed in groups, in teams, and in organizations. And we struggle to make this really work because we are not so great at working together to get things done. Particularly when the size of the team scales up. That’s where I see an opportunity for research. We can ask, how might computing help us overcome the kinds of heuristics and biases that might lead us astray and how we design our collaborations. Ultimately, I envision a world where computational systems orchestrate an organization with complex and open-ended goals from an online labor market. In fact, it’s already happening, considering mTurk as a workplace or collaboration on open source projects. With such a vision in mind, I aspire to become one of the many researchers who will shape the future of work and collaboration.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;A: What are your plans after getting a PhD?&lt;/strong&gt;&lt;br /&gt; 나: To be honest, I’m not sure. Because I think things are gonna change anyway. First of all, as I mentioned before, what I want to do right now is “research.” But since I don’t know how my thoughts are gonna change as I continue my PhD, I haven’t published a specific plan in the far future. Maybe I would end up in the industry, or I could be working at Adobe or Microsoft Research. Anyway, one thing I am certain about is the direction. I have pretty much confidence that I would be doing something related to my current research interests no matter what specific profession I end up with.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;A: What made you have such confidence? That is, why are you so certain about the relation between you and this field?&lt;/strong&gt;&lt;br /&gt; 나: You know, there is an expression “connect the dots.” I literally connected the dots, things that I have been interested in or been good at, and this led me to the field of HCI. For instance, many thoughts that I have gone through while working as a front-end engineer in a lot of web projects were related to HCI: my interests in web accessibility led me to do the SoundGlance project. Moreover, my assignment at a class I took as a freshman was related to open source software projects, and I realized that a similar topic was being studied in the field. After all this, I could not help but fall in love with HCI. Plus, I got more confidence as I did an intern at two labs.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;여기서부터는 &lt;strong&gt;내가 그간 해온 연구와 앞으로 하고 싶은 연구&lt;/strong&gt;에 대한 이야기가 오갔다. 대부분 특정 프로젝트나 domain-specific한 내용이라 생략&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;strong&gt;A: Okay, now that we have only 2 mins left, do you have any questions for me?&lt;/strong&gt;&lt;br /&gt; 나: Yes, I do have a lot of questions. First of all, I wonder what kind of working style or advising style you have.&lt;br /&gt; A: Well, good question. To be honest, I am closer to hands-off rather than hands-on. Not entirely hands-off, cuz I do hold weekly meetings with my students, and my office is right in front of the lab. But I wish my student to be independent while I only suggest a direction, not interfering in every way. 나: Great! I also think that making my own is more enjoyable and meaningful compared to being spoon-fed.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;이후 인사말 생략&lt;/p&gt; &lt;/blockquote&gt; &lt;h3 id=&quot;더-자세한-이야기&quot;&gt;더 자세한 이야기&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;[0] &lt;a href=&quot;/2020/08/study-abroad.html&quot;&gt;어드미션 결과와 타임라인&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[1] 왜 박사유학을 가고 싶은가&lt;/li&gt; &lt;li&gt;[2] &lt;a href=&quot;/2020/09/grad-abroad.html&quot;&gt;대학원 유학의 종류&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[3] 연구실 인턴 경험&lt;/li&gt; &lt;li&gt;[4] GRE 준비&lt;/li&gt; &lt;li&gt;[5] 포트폴리오 사이트 및 CV 준비&lt;/li&gt; &lt;li&gt;[6] 서류 준비: SOP/Personal statement/추천서&lt;/li&gt; &lt;li&gt;[7-1] &lt;a href=&quot;/2020/01/interview-1.html&quot;&gt;인터뷰 준비과정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;[7-2] 인터뷰 스크립트 (현재 글)&lt;/em&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>jaeyoon</name></author><category term="미국"/><category term="인터뷰"/><category term="PhD"/><summary type="html">인터뷰 내용 중 기억에 남는 부분을 여기 남긴다. 내가 한국어로 두뇌가 돌아가는 사람이라 뒤늦게 영어로 복기하는 데 애먹었다. 군데군데 표현이 어설플 수 있으니 이해 바란다. **A: Hi, Jaeyoon. I found your application very inte</summary></entry><entry><title type="html">첫 인터뷰 Part 1: 준비과정</title><link href="http://blog.jaeyoon.io/2020/01/interview-1.html" rel="alternate" type="text/html" title="첫 인터뷰 Part 1: 준비과정"/><published>2020-01-07T23:59:20+00:00</published><updated>2020-01-07T23:59:20+00:00</updated><id>http://blog.jaeyoon.io/2020/01/interview-1</id><content type="html" xml:base="http://blog.jaeyoon.io/2020/01/interview-1.html">&lt;h4 id=&quot;첫-인터뷰-전까지-준비한-것들&quot;&gt;첫 인터뷰 전까지 준비한 것들&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;[1] 예상 질문에 대한 답변 내용 준비&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;가장 먼저 한 일은 예상 질문을 모으는 일이었다. 스누라이프 유학게시판, 고우해커스, 스터디원들이 공유해준 자료, A교수님의 메일 등 가능한 모든 소스에서 총체적으로 긁어모았다. 모인 질문을 오픈 코딩으로 비슷한 것끼리 묶어 정리한 결과, 아래와 같이 크게 네 가지 카테고리로 분류되었다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Past&lt;/strong&gt;: 여태까지 해온 것에 대한 질문&lt;br /&gt;(e.g., 네 CV에 있는 xx 페이퍼가 흥미로운데 한 번 설명해봐라)&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Future&lt;/strong&gt;: 앞으로 하고 싶은 것에 대한 질문&lt;br /&gt; (e.g., 왜 PhD를 하고 싶니? 어떤 연구 하고 싶니?)&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Personal&lt;/strong&gt;: 연구 외적인 질문들&lt;br /&gt; (e.g., 자유시간에 뭐하니? 어떤 방식으로 협업하니?)&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Miscellaneous&lt;/strong&gt;: 분류가 애매한 질문들.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;각 카테고리마다 마크다운 파일을 하나씩 만들어 하위 질문들과 그에 대해 답변할 내용을 정리했다. 12월 중순부터는 인터뷰 스터디에 참여하며 말하는 연습도 함께 진행했다.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;[2] 교수님 페이퍼 읽고 정리&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;1번에서 준비한 네 개의 파일은 지원한 모든 학교 인터뷰에 공통적으로 적용하였고, 이에 더하여 교수님-specific하게 준비한 내용을 담은 파일을 하나 더 준비했다. A교수님의 페이퍼 중 가장 citation 횟수가 높고 대표성 있어보이는 것 한 편, 내 관심사와 밀접 한 것을 두 편, 총 세 편을 선정하여 정독한 후 인터뷰 때 기회를 봐서 언급할 수 있도록 간단히 요약해놓았다.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;[3] 인터뷰 환경조성&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;인터뷰 스터디원이 추천해준 &lt;a href=&quot;https://smartstore.naver.com/tabletmarket/products/4769161725?NaPm=ct%3Dk4z1io1c%7Cci%3D61d179284bd282cf5afbc5d7be6a70ab9e3b1540%7Ctr%3Dslsl%7Csn%3D321329%7Cic%3D%7Chk%3D1bfd64cd987e30b0eadb1c1d08ba05baa52e76a2&quot; target=&quot;_blank&quot;&gt;받침대&lt;/a&gt;를 이용해 노트북에 달린 캠 위치를 살짝 조정했다. 캠 옆에 붙인 포스트잇에는 A교수님의 풀 네임과 함께 “Smile”이라고 적혀있다. 인터뷰 스터디에서도 그렇고 평상시에도 무표정이 너무 무섭다는 지적을 종종 받기 때문이다. 화면 왼쪽에는 스카이프를, 오른쪽에는 1에서 준비한 파일들을 필요할 때마다 참고할 수 있도록 띄워두었다.&lt;/p&gt; &lt;figure&gt;&lt;img data-action=&quot;zoom&quot; src=&quot;/assets/img/200107/screen.jpg&quot; alt=&quot;인터뷰 환경&quot; /&gt;&lt;figcaption&gt;인터뷰 당시 나의 노트북 스크린&lt;/figcaption&gt;&lt;/figure&gt; &lt;h4 id=&quot;앞으로-더-준비할-것들&quot;&gt;앞으로 더 준비할 것들&lt;/h4&gt; &lt;p&gt;인터뷰는 1월 6일 스카이프를 통해 밤 11시반에 30분 정도 이루어졌다. A교수님이 있는 미국 시간으로는 오전 6시반이었다. 구체적인 내용은 &lt;a href=&quot;/2020/01/interview-2.html&quot;&gt;Part 2 포스팅&lt;/a&gt;에 작성했다.&lt;/p&gt; &lt;p&gt;첫 인터뷰를 스스로 평가하자면, 망친 것 같다. 낙천적으로 생각해도 잘 보지는 못했다. 가장 아쉬운 순간은 교수님이 본인이 하고 있는 프로젝트 설명하면서 예시로 어떤 카페 이야기를 하시던 중이었다. 나는 순간 이를 농담으로 이해하고 하하하하핳 크게 웃으며 열심히 리액션했는데 돌이켜 생각하니 농담이 아니라 매우 진지한 얘기였던 것 같다. 교수님이야 워낙 친절하셔서 내색을 안하셨지만, 외국인 느낌을 물씬 풍긴 순간이지 않았을까 싶다. 연구 핏도 중요하지만 4~6년 함께 일할 사람을 선발하는 과정이다보니 사람 대 사람으로 좋은 인상을 남기는 게 중요하다고 들었는데 그런 부분에서는 많이 모자랐던 것 같다.&lt;/p&gt; &lt;p&gt;답변 내용을 준비하는 데 치중해서 영어적인 부분을 그간 간과했는데, 훨씬 실전처럼 연습을 하면서 외국인 느낌 안들게 리액션하고 당황스러운 상황을 자연스럽게 넘길 방법을 익혀야겠다.&lt;/p&gt; &lt;h3 id=&quot;더-많은-이야기&quot;&gt;더 많은 이야기&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;[0] &lt;a href=&quot;/2020/08/study-abroad.html&quot;&gt;어드미션 결과와 타임라인&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[1] 왜 박사유학을 가고 싶은가&lt;/li&gt; &lt;li&gt;[2] &lt;a href=&quot;/2020/09/grad-abroad.html&quot;&gt;대학원 유학의 종류&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[3] 연구실 인턴 경험&lt;/li&gt; &lt;li&gt;[4] GRE 준비&lt;/li&gt; &lt;li&gt;[5] 포트폴리오 사이트 및 CV 준비&lt;/li&gt; &lt;li&gt;[6] 서류 준비: SOP/Personal statement/추천서&lt;/li&gt; &lt;li&gt;&lt;em&gt;[7-1] 인터뷰 준비과정 (현재 글)&lt;/em&gt;&lt;/li&gt; &lt;li&gt;[7-2] &lt;a href=&quot;/2020/01/interview-2.html&quot;&gt; 인터뷰 스크립트&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>jaeyoon</name></author><category term="미국"/><category term="인터뷰"/><category term="PhD"/><summary type="html">#### 첫 인터뷰 전까지 준비한 것들 **[1] 예상 질문에 대한 답변 내용 준비** 가장 먼저 한 일은 예상 질문을 모으는 일이었다. 스누라이프 유학게시판, 고우해커스, 스터디원들이 공유해준 자료, A교수님의 메일 등 가능한 모든 소스에서 총체적으로 긁어모았다.</summary></entry><entry><title type="html">React에서 PropsType Validation하는 법 (v15.5+ 기준)</title><link href="http://blog.jaeyoon.io/2018/01/react-propstype.html" rel="alternate" type="text/html" title="React에서 PropsType Validation하는 법 (v15.5+ 기준)"/><published>2018-01-11T03:15:30+00:00</published><updated>2018-01-11T03:15:30+00:00</updated><id>http://blog.jaeyoon.io/2018/01/react-propstype</id><content type="html" xml:base="http://blog.jaeyoon.io/2018/01/react-propstype.html">&lt;h3 id=&quot;효과&quot;&gt;효과&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;컴포넌트 클래스의 &lt;code class=&quot;highlighter-rouge&quot;&gt;propTypes&lt;/code&gt; 객체를 설정&lt;/strong&gt;하면,&lt;/p&gt; &lt;ul&gt; &lt;li&gt;컴포넌트에서 원하는 props의 type &amp;amp; 전달된 props의 type 이 &lt;em&gt;일치하지 않을 때&lt;/em&gt;, 콘솔에서 오류 메시지가 나타나도록 할 수 있다.&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;isRequired&lt;/code&gt;로 필수 props를 지정할 수 있다. 즉 props를 &lt;em&gt;지정하지 않으면&lt;/em&gt; 콘솔에서 오류 메시지가 나타난다.&lt;/li&gt; &lt;/ul&gt; &lt;figure&gt; &lt;img data-action=&quot;zoom&quot; src=&quot;https://velopert.com/wp-content/uploads/2016/03/%EC%9D%B4%EB%AF%B8%EC%A7%80-3-1.png&quot; alt=&quot;콘솔의 오류 메시지 예시&quot; /&gt; &lt;figcaption&gt;콘솔의 오류 메시지 예시&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;h3 id=&quot;설치&quot;&gt;설치&lt;/h3&gt; &lt;blockquote&gt; &lt;p&gt;React v15.5부터는 PropTypes는 deprecated 되고 prop-types라는 다른 패키지로 이동되어, &lt;strong&gt;따로 설치&lt;/strong&gt;하지 않으면 에러가 난다. (참고: https://reactjs.org/docs/typechecking-with-proptypes.html)&lt;/p&gt; &lt;/blockquote&gt; &lt;ul&gt; &lt;li&gt;설치 &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install —save prop-types&lt;/code&gt;&lt;/li&gt; &lt;li&gt;사용되는 컴포넌트마다 임포트해준다 &lt;code class=&quot;highlighter-rouge&quot;&gt;import PropTypes from 'prop-types';&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;h3 id=&quot;사용&quot;&gt;사용&lt;/h3&gt; &lt;blockquote&gt; &lt;p&gt;이전 버전의 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;title: React.PropTypes.stinrg&lt;/code&gt; 처럼 앞에 &lt;code class=&quot;highlighter-rouge&quot;&gt;React&lt;/code&gt;를 붙여줘야 한다. &lt;code class=&quot;highlighter-rouge&quot;&gt;PropTypes&lt;/code&gt;가 &lt;code class=&quot;highlighter-rouge&quot;&gt;React&lt;/code&gt;에서 분리되기 이전이기 때문.&lt;/p&gt; &lt;/blockquote&gt; &lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// src/components/Content.js&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Content&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;propTypes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isRequired&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;하지만 위처럼 일일이 작성하면 귀찮으니 아래 &lt;a href=&quot;https://reactjs.org/docs/typechecking-with-proptypes.html&quot;&gt;공식문서의 예시&lt;/a&gt;와 같이 Custom Validator 함수를 정의하는 것이 좋은 방법이다. Array 혹은 Object를 사용하는 버전도 있다.&lt;/p&gt; &lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'prop-types'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyComponent&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* ... */&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;propTypes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 선언해둔다 (디폴트로 optional)&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;optionalArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;optionalBool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;optionalFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;optionalNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;optionalObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;optionalString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;optionalSymbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Anything that can be rendered: numbers, strings, elements or an array (or fragment) containing these types.&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;optionalNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// A React element.&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;optionalElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// an instance of a class. This uses JS's instanceof operator.&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;optionalMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;instanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ensure that your prop is limited to specific values by treating it as an enum.&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;optionalEnum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oneOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'News'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Photos'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// An object that could be one of many types&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;optionalUnion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oneOfType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;instanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// An array of a certain type&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;optionalArrayOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arrayOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// An object with property values of a certain type&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;optionalObjectOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;objectOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// An object taking on a particular shape&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;optionalObjectWithShape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fontSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 위의 것들 중 어느 것이든 isRequired와 묶을 수 있다&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;requiredFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isRequired&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 묶지 않고 any data type이지만 isRequired 쓰고플 때&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;requiredAny&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isRequired&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Custom validator 함수 (기본)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// It should return an `Error` object if the validation fails. &lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Don't `console.warn` or throw, as this won't work inside `oneOfType`.&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;customProp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;propName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;componentName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/matchme/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;propName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Invalid prop `'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;propName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'` supplied to'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' `'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;componentName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'`. Validation failed.'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Custom validator 함수 (`arrayOf`, `objectOf` 사용 버전)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// It should return an `Error` object if the validation fails. &lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// The validator will be called for each key in the array or object. The first two arguments of the validator are the array or object itself, and the current item's key.&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;customArrayProp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arrayOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;propValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;componentName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;propFullName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/matchme/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;propValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Invalid prop `'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;propFullName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'` supplied to'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' `'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;componentName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'`. Validation failed.'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;h3 id=&quot;ref&quot;&gt;Ref&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/&quot;&gt;React Documentation&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>jaeyoon</name></author><category term="react"/><summary type="html">### 효과 **컴포넌트 클래스의 `propTypes` 객체를 설정**하면, - 컴포넌트에서 원하는 props의 type &amp; 전달된 props의 type 이 *일치하지 않을 때*, 콘솔에서 오류 메시지가 나타나도록 할 수 있다. - `isRequired`로 필수 pr</summary></entry><entry><title type="html">React에서의 바인딩(Binding) 방법들 (v16+ 기준)</title><link href="http://blog.jaeyoon.io/2018/01/react-bind.html" rel="alternate" type="text/html" title="React에서의 바인딩(Binding) 방법들 (v16+ 기준)"/><published>2018-01-10T03:15:30+00:00</published><updated>2018-01-10T03:15:30+00:00</updated><id>http://blog.jaeyoon.io/2018/01/react-bind</id><content type="html" xml:base="http://blog.jaeyoon.io/2018/01/react-bind.html">&lt;blockquote&gt; &lt;p&gt;이 글은 현재 가장 최신인 16.2.0버전의 React를 기준으로 작성되었습니다.&lt;/p&gt; &lt;/blockquote&gt; &lt;h3 id=&quot;왜-필요한가&quot;&gt;왜 필요한가?&lt;/h3&gt; &lt;p&gt;JavaScript에서 다음 두 코드는 동일하지 &lt;strong&gt;않다&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;결론부터 말하자면 두 번째 코드는 오류가 나게 된다. Binding은 두 번째 코드가 첫번째 코드와 똑같이 작동할 수 있도록 해준다.&lt;/p&gt; &lt;p&gt;React에서는 일반적으로 다른 컴포넌트로 pass할 메소드만 binding하면 된다. 예컨대 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;button onClick={this.handleClick}&amp;gt;&lt;/code&gt;에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;this.handleClick&lt;/code&gt;을 pass하고 있으므로 binding이 필요하다. 반면 &lt;code class=&quot;highlighter-rouge&quot;&gt;render&lt;/code&gt; 메소드 또는 &lt;a href=&quot;https://hackernoon.com/reactjs-component-lifecycle-methods-a-deep-dive-38275d9d13c0&quot;&gt;lifecycle 메소드&lt;/a&gt;에는 binding이 필요없다. 다른 컴포넌트로 pass되지 않으니깐.&lt;/p&gt; &lt;p&gt;JavaScript에서의 &lt;code class=&quot;highlighter-rouge&quot;&gt;bind&lt;/code&gt;에 대해 알아보려면 &lt;a href=&quot;http://yehudakatz.com/2011/08/11/understanding-javascript-function-invocation-and-this/&quot;&gt;여기&lt;/a&gt;를 참고하라.&lt;/p&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;h3 id=&quot;어떻게-하는가&quot;&gt;어떻게 하는가?&lt;/h3&gt; &lt;p&gt;함수들이 컴포넌트 attributes 예컨대 &lt;code class=&quot;highlighter-rouge&quot;&gt;this.props&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;this.state&lt;/code&gt;에 대한 액서스를 가지도록 하는 방법에는 여러 가지가 있다.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;1. &lt;code class=&quot;highlighter-rouge&quot;&gt;constructor()&lt;/code&gt; 에서 바인딩&lt;/strong&gt; (ES2015) : &lt;code class=&quot;highlighter-rouge&quot;&gt;this.method.bind(this)&lt;/code&gt;&lt;/p&gt; &lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handleClick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handleClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handleClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Click happened'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onClick=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handleClick&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Click Me&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;​&lt;/p&gt; &lt;p&gt;&lt;strong&gt;2. &lt;code class=&quot;highlighter-rouge&quot;&gt;render()&lt;/code&gt;에서 바인딩&lt;/strong&gt; : &lt;code class=&quot;highlighter-rouge&quot;&gt;this.method.bind(this)&lt;/code&gt;&lt;/p&gt; &lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handleClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Click happened'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onClick=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handleClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Click Me&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;strong&gt;3. &lt;code class=&quot;highlighter-rouge&quot;&gt;render()&lt;/code&gt; 에서 Arrow Function으로 바인딩&lt;/strong&gt; : &lt;code class=&quot;highlighter-rouge&quot;&gt;() =&amp;gt; this.method()&lt;/code&gt;&lt;/p&gt; &lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handleClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Click happened'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onClick=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handleClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Click Me&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;​&lt;/p&gt; &lt;p&gt;&lt;strong&gt;4. Class Properties&lt;/strong&gt; (실험적) : &lt;code class=&quot;highlighter-rouge&quot;&gt;method = () =&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handleClick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Click happened'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onClick=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handleClick&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Click Me&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;​&lt;/p&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;h3 id=&quot;ref&quot;&gt;Ref&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://blog.andrewray.me/react-es6-autobinding-and-createclass/&quot;&gt;Andrew Wray&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/faq-functions.html#why-is-binding-necessary-at-all&quot;&gt;React Documentation&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>jaeyoon</name></author><category term="react"/><summary type="html">&gt; 이 글은 현재 가장 최신인 16.2.0버전의 React를 기준으로 작성되었습니다. ### 왜 필요한가? JavaScript에서 다음 두 코드는 동일하지 **않다** ```jsx obj.method(); ``` ```jsx var method = obj.met</summary></entry></feed>